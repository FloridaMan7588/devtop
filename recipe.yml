# vib
name: DevTop # Replace this name with your image name
id: devtop # Replace this ID with your image ID
stages:
  - id: build
    base: ghcr.io/vanilla-os/desktop:main # Optionally, Replace this image URL with a different one i.e. nvidia:main, etc
    singlelayer: false
    labels:
      maintainer: self-maintained # Optionally, Replace this with your name
    args:
      DEBIAN_FRONTEND: noninteractive # Set the image environment as non-interactive

    # Commands to run first before building the modules
    runs:
      commands:
        - echo 'APT::Install-Recommends "1";' > /etc/apt/apt.conf.d/01norecommends

    modules:
      - name: init-setup
        type: shell
        commands:
          - lpkg --unlock
          - apt-get update

      # Put your custom actions below this comment
      # Package installation for defaults/useful stuff
      - name: default-packages-install
        type: apt
        source:
          packages:
            - nano
            - git
            - wget
            - zsh
            - curl
            - which
            - make
            - gcc
            - g++
            - cmake
            - python3
            - python3-pip
            - python3-venv
            - openjdk-17-jre
            - openjdk-17-jdk
            - gnome-tweaks
        options:
          noRecommends: true
          installSuggests: true
          fixMissing: true
          fixBroken: true
      - name: zsh-init
        type: shell
        commands:
          - echo 'SHELL=/usr/bin/zsh' >> /etc/default/useradd

      - name: chezmoi-install
        type: shell
        commands:
          - curl -fSsL https://get.chezmoi.io | sh -- -b /usr/local/bin
      - name: zoxide-install
        type: apt
        source:
          packages:
            - zoxide
            - fzf
      - name: zoxide-config
        type: shell
        commands:
          - echo 'eval "$(zoxide init zsh)"' >> /etc/zsh/zshrc
      - name: bun-install
        type: shell
        commands:
          - curl -fsSL https://bun.sh/install | bash
      - name: bun-config
        type: shell
        commands:
          - echo 'export PATH="$HOME/.bun/bin:$PATH"' >> /etc/zsh/zshrc
      - name: flatpak-apps-install
        type: flatpak
        system:
          repourl: "https://flathub.org/repo/flathub.flatpakrepo"
          reponame: "flathub"
          install:
            - "net.waterfox.waterfox"
          remove:
            - "org.gnome.Epiphany"
        user:
          repourl: "https://flathub.org/repo/flathub.flatpakrepo"
          reponame: "flathub"
          install:
            - "io.github.shiftey.Desktop"
            - "com.visualstudio.code"
            - "io.github.equicord.equibop"
            - "com.spotify.Client"
            - "com.obsproject.Studio"
            - "net.lutris.Lutris"
            - "com.mattjakeman.ExtensionManager"
            - "net.codelogistics.webapps"
            - "org.prismlauncher.PrismLauncher"
          remove:
            - "org.gnome.Epiphany"
      - name: distrobox-install
        type: shell
        commands:
          - curl -s https://raw.githubusercontent.com/89luca89/distrobox/main/install | sh -s -- --next

      # - name: example-commands # Sample module demonstrating the Shell module with custom commands
      #   type: shell
      #   commands:
      #   - echo Example output

      # - name: example-modules # Sample module demonstrating importing local and remote modules
      #   type: includes
      #   includes:
      #     - modules/50-install-debs.yml # Sample local module present in this repository
      #     - gh:vanilla-os/dev-image:main:modules/00-basics.yml # Sample GitHub remote module in the format: `gh:your-name/your-repo:branch:modules/file.yml`
      #     - https://raw.githubusercontent.com/Vanilla-OS/dev-image/main/modules/05-go.yml # Sample full URL remote module

      # Put your custom actions above this comment

      - name: set-image-name-abroot
        type: includes
        includes:
          - modules/80-set-image-abroot-config.yml

      - name: cleanup
        type: shell
        commands:
          - apt-get autoremove -y
          - apt-get clean
          - lpkg --lock

      - name: fsguard
        type: fsguard
        CustomFsGuard: false
        FsGuardLocation: "/usr/sbin/FsGuard"
        GenerateKey: true
        FilelistPaths: ["/usr/bin"]
        modules:
          - name: remove-prev-fsguard
            type: shell
            commands:
              - rm -rf /FsGuard
              - rm -f ./minisign.pub ./minisign.key
              - chmod +x /usr/sbin/init

      - name: cleanup2
        type: shell
        commands:
          - rm -rf /tmp/*
          - rm -rf /var/tmp/*
          - rm -rf /sources
